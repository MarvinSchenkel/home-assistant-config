---
alias: areas_bathroom_lights
description: Turns the bathroom lights on when motion has been detected
mode: queued
id: 9617f5b7-0733-4877-82ea-1ab8bc5332b0

variables:
  current_light_scene: 'scene.bathroom_lights_{{ states("input_select.current_light_schedule") }}'
  anchors:
    - &condition_is_presence_detected
      alias: "There is movement in the bathroom"
      condition: state
      entity_id: binary_sensor.presence_bathroom
      state: "on"

    - &condition_no_presence_detected
      alias: "No presence has been detected for a while"
      condition: state
      entity_id: binary_sensor.presence_bathroom
      state: "off"
      for:
        seconds: 300

    - &condition_is_dark
      alias: "It is dark"
      condition: state
      entity_id: binary_sensor.bathroom_is_dark
      state: "on"

    - &condition_is_room_mode
      alias: "Check the room mode"
      condition: state
      entity_id:
        - input_select.bathroom_room_mode

    - &condition_light_schedule_change
      alias: "Check if the automation got triggered by a light schedule change"
      condition: trigger
      id: light_schedule_change

    - &condition_shower_on
      alias: "When someone is taking a shower"
      condition: state
      entity_id: binary_sensor.bathroom_shower_detected
      state: "on"

    - &turn_on
      action: scene.turn_on
      alias: "Turn the bathroom lights on"
      data:
        transition: 1

    - &turn_off
      action: light.turn_off
      data:
        entity_id: light.bathroom
        transition: 5

trigger:
  - trigger: homeassistant
    event: start

  - trigger: event
    event_type: automation_reloaded

  - trigger: state
    entity_id:
      - binary_sensor.presence_bathroom
    to: "on"

  - trigger: state
    entity_id: binary_sensor.presence_bathroom
    to: "off"
    for:
      seconds: 300

  - trigger: state
    entity_id:
      - input_select.bathroom_room_mode
    to: Spa
    id: spa_mode_on

  - trigger: state
    entity_id:
      - input_select.bathroom_room_mode
      - binary_sensor.bathroom_is_dark

condition:
  - condition: state
    entity_id: input_boolean.setting_manual_lights
    state: "off"

action:
  - choose:
      - alias: "Turn on fancy spa lights when spa mode is activated"
        conditions:
          - condition: trigger
            id: spa_mode_on
        sequence:
          - variables:
              spa_scenes:
                - "dromerigeschemering"
                - "melkweg"
                - "peinzend"
                - "robijngloed"
                - "sterrenlicht"
              spa_scene: "{{ spa_scenes | random }}"
          - <<: *turn_on
            target:
              entity_id: scene.bathroom_lights_{{ spa_scene }}

      - alias: "Keep the lights on in spa mode (when someone is taking a bath)"
        conditions:
          - <<: *condition_is_room_mode
            state: "Spa"
        sequence:
          - stop: "Keeping the lights on in spa mode!"

      - alias: >-
          "Ensure there is some light when someone is taking a shower in the morning and people
           are still sleeping"
        conditions:
          - *condition_shower_on
          - *condition_is_dark
          - or:
              - condition: time
                before: "08:00:00"
              - <<: *condition_is_room_mode
                state:
                  - "Slaap"
                  - "Net wakker"
        sequence:
          - <<: *turn_on
            target:
              entity_id: "scene.bathroom_lights_lezen"

      - alias: "Very subtly change the lights when a light schedule change is detected."
        conditions:
          - *condition_is_presence_detected
          - *condition_is_dark
          - *condition_light_schedule_change
          - not:
              - <<: *condition_is_room_mode
                state: "Slaap"
        sequence:
          - <<: *turn_on
            target:
              entity_id: "{{ current_light_scene }}"
            data:
              transition: 120

      - alias: "Turn lights on when presence is detected and we're not asleep"
        conditions:
          - *condition_is_presence_detected
          - *condition_is_dark
          - not:
              - <<: *condition_is_room_mode
                state: "Slaap"
        sequence:
          - <<: *turn_on
            target:
              entity_id: "{{ current_light_scene }}"

      - alias: "Turn the light off when presence is off for x-amount of minutes"
        conditions:
          - *condition_no_presence_detected
        sequence:
          - *turn_off

    default: []
