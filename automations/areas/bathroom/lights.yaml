---
alias: areas_bathroom_lights
description: Turns the bathroom lights on when motion has been detected
mode: queued
id: 9617f5b7-0733-4877-82ea-1ab8bc5332b0

variables:
  anchors:
    - &manual_control_off
      alias: "Turn manual control off"
      service: input_boolean.turn_off
      target:
        entity_id: input_boolean.bathroom_manual_control

    - &presence_detected
      alias: "There is movement in the bathroom"
      condition: state
      entity_id: binary_sensor.presence_bathroom
      state: "on"

    - &is_dark
      alias: "It is dark"
      condition: state
      entity_id: binary_sensor.bathroom_is_dark
      state: "on"

    - &is_light_schedule
      alias: "Check current light schedule"
      condition: state
      entity_id: input_select.current_light_schedule

    - &turn_off
      service: light.turn_off
      data:
        entity_id: light.fibaro_bathroom
        transition: 5

trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  - platform: state
    entity_id:
      - binary_sensor.presence_bathroom
    to: "on"
  - platform: state
    entity_id: binary_sensor.presence_bathroom
    to: "off"
    for:
      seconds: 240
  - platform: state
    entity_id:
      - input_select.bathroom_room_mode
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: 67eb822e4407671200f5bbd6f9ca00c2
      label: "Scene ID"
      value: 16
    id: "bathroom_switch"
  - platform: time
    at: "05:00:00"
    id: "reset"
  - platform: state
    entity_id:
      - light.fibaro_bathroom
    to: "off"
    id: "light_off"

condition:
  - condition: state
    entity_id: input_boolean.setting_manual_lights
    state: "off"

action:
  - choose:
      - alias: "Reset manual control at the start of the day"
        conditions:
          - condition: trigger
            id: "reset"
        sequence:
          - *manual_control_off

      - alias: "Set manual control when switch is pressed"
        conditions:
          - condition: trigger
            id: "bathroom_switch"
        sequence:
          - alias: "Turn manual control on"
            service: input_boolean.turn_on
            target:
              entity_id: input_boolean.bathroom_manual_control

      - alias: "Turn manual control off when light turns off"
        conditions:
          - condition: trigger
            id: "light_off"
        sequence:
          - *manual_control_off

      - alias: "Stop automating lights when manual control is on"
        conditions:
          - condition: state
            entity_id:
              - input_boolean.bathroom_manual_control
            state: "on"
        sequence: []

      - alias: "Turn lights off when someone is asleep"
        conditions:
          - condition: state
            entity_id:
              - input_select.bathroom_room_mode
            state: "Slaap"
        sequence:
          - *turn_off

      - alias: "Turn lights on when presence is detected and we're not asleep"
        conditions:
          - *presence_detected
          - *is_dark
          - <<: *is_light_schedule
            state: "dim"
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.bathroom_lights_dim
              transition: 1

      - alias: "Turn lights on when presence is detected and we're not asleep"
        conditions:
          - *presence_detected
          - *is_dark
          - <<: *is_light_schedule
            state: "normal"
        sequence:
          - service: scene.turn_on
            data:
              entity_id: scene.bathroom_lights_normal
              transition: 1

    default:
      - *turn_off
