---
alias: areas_livingroom_lights
description: Turns the livingroom lights on when motion has been detected
mode: queued
id: c2c13dd9-a81c-4b44-a20e-990c460f9347
trace:
  stored_traces: 25

trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: automation_reloaded
  - platform: state
    entity_id:
      - input_boolean.setting_manual_lights
      - binary_sensor.livingroom_is_dark
      - binary_sensor.house_mode_everyone_at_home_working
  - platform: state
    entity_id:
      - binary_sensor.house_mode_someone_just_awake
      - binary_sensor.house_mode_someone_just_home
      - binary_sensor.everyone_left_home
    from: "off"
    to: "on"
  - platform: state
    entity_id:
      - binary_sensor.house_mode_everyone_asleep
    from: "off"
    to: "on"
    id: "everyone_asleep"
  - platform: state
    entity_id:
      - light.fibaro_livingroom
      - light.fibaro_kitchen
      - light.dinner
    id: "lights"
  - platform: numeric_state
    entity_id:
      - sensor.sun_elevation
    below: -3
  - platform: numeric_state
    entity_id:
      - sensor.sun_elevation
    below: 1
  - platform: numeric_state
    entity_id:
      - sensor.sun_elevation
    above: 1
  - platform: time
    at: "05:00:00"
    id: "reset"
  - platform: time
    at: "19:00:00"

condition:
  - condition: state
    entity_id: input_boolean.setting_manual_lights
    state: "off"

action:
  - choose:
      - alias: "Reset manual control at the start of the day"
        conditions:
          - condition: trigger
            id: "reset"

        sequence:
          - &manual_control_off
            alias: "Turn manual control off"
            service: input_boolean.turn_off
            target:
              entity_id: input_boolean.livingroom_manual_control

      - alias: "Set lights as manually controlled when someone changes them"
        conditions:
          - &lights_changed
            alias: "Lights have changed"
            condition: trigger
            id: "lights"
          - alias: "It was changed by a user"
            condition: template
            value_template: "{{ trigger.to_state.context.user_id != None }}"

        sequence:
          - alias: "Set lights downstairs as manually controlled"
            service: input_boolean.turn_on
            target:
              entity_id: input_boolean.livingroom_manual_control

      - alias: "Turn the light off when we go to sleep, even if it is manually controlled"
        conditions:
          - alias: "Everyone has gone to sleep"
            condition: trigger
            id: "everyone_asleep"

        sequence:
          - &turn_off
            alias: "Turn the lights off"
            service: light.turn_off
            target:
              entity_id:
                - light.livingroom
                - light.kitchen
            data:
              transition: 5
          - *manual_control_off

      - alias: "Turn the light off when everyone is working from home on a dark day until sunset"
        conditions:
          - alias: "Everyone at home is working from home"
            condition: state
            entity_id:
              - binary_sensor.house_mode_everyone_at_home_working
            state: "on"
          - condition: numeric_state
            entity_id:
              - sensor.sun_elevation
            above: 1.0

        sequence:
          - *turn_off

      - alias: "Stop automating the lights if any of the lights are manually controlled or if this automation is triggered by lights changed due to transition"
        conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id:
                  - input_boolean.livingroom_manual_control
                state: "on"
              - *lights_changed

        sequence: []

      - conditions:
          - condition: state
            entity_id: binary_sensor.livingroom_is_dark
            state: "on"
          - condition: numeric_state
            entity_id: sensor.num_people_at_home
            above: 0
          - condition: or
            conditions:
              - condition: state
                entity_id:
                  - binary_sensor.house_mode_someone_just_awake
                state: "on"
              - condition: state
                entity_id:
                  - binary_sensor.house_mode_someone_awake
                state: "on"

        sequence:
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id:
                      - sensor.sun_elevation
                    below: -3
                  - condition: time
                    after: "19:00:00"

                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: scene.livingroom_lights_evening
                    data:
                      transition: 4

            default:
              - service: scene.turn_on
                target:
                  entity_id: scene.livingroom_lights_normal
                data:
                  transition: 4

    default:
      - *turn_off
