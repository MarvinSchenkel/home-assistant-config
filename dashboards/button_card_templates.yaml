# !toggle word-wrap

#################################################
#                                               #
#                     BASE                      #
#                                               #
#################################################

base:
  variables:
    state: >
      [[[ return entity === undefined || entity.state; ]]]
    timeout: >
      [[[ return entity === undefined || Date.now() - Date.parse(entity.last_changed); ]]]
    light_color: >
      [[[ return entity === undefined ? 'var(--state-icon-color)' : 'var(--button-card-light-color-no-temperature)'; ]]]
  aspect_ratio: 1/1
  show_state: true
  show_icon: false
  state_display: >
    [[[ if (variables.state === true) return 'Okänd'; ]]]
  tap_action:
    ui_sound_tablet: |
      [[[
        const tablet = states['switch.galaxy_tab_a_screensaver'];
        const screensaver = states[tablet] === undefined || states[tablet].state;

        if (variables.state === 'off' && screensaver === 'off') {
          hass.callService('media_player', 'play_media', {
            entity_id: 'media_player.galaxy_tab_a',
            media_content_id: '/local/sound/on.m4a',
            media_content_type: 'music'
          });
        }
        if (variables.state === 'on' && screensaver === 'off') {
          hass.callService('media_player', 'play_media', {
            entity_id: 'media_player.galaxy_tab_a',
            media_content_id: '/local/sound/off.m4a',
            media_content_type: 'music'
          });
        }
      ]]]
    animation_card: |
      [[[
        const animation_speed_ms = 900;
        const animation = `card_bounce ${animation_speed_ms}ms cubic-bezier(0.22, 1, 0.36, 1)`;
        this.shadowRoot.getElementById("card").style.animation = animation;
        window.setTimeout(() => {
          this.shadowRoot.getElementById("card").style.animation = "none";
        }, animation_speed_ms)
      ]]]
    action: toggle
    haptic: medium
  styles:
    grid:
      - grid-template-areas: |
          "icon  circle"
          "n     n"
          "s     s"
      - grid-template-columns: repeat(2, 1fr)
      - grid-template-rows: auto repeat(2, min-content)
      - gap: 2%
      - align-items: start
    name:
      - justify-self: start
      - line-height: 115%
    state:
      - justify-self: start
      - line-height: 115%
    card:
      - font-family: Sf Display
      - border-radius: var(--custom-button-card-border-radius)
      - -webkit-tap-highlight-color: rgba(0,0,0,0)
      - transition: none
      - padding: 10%
      - --mdc-ripple-color: >
          [[[
            return (variables.state === 'on' || variables.state === 'Thuis' || variables.state === 'Net thuis' || variables.state === 'halfopen' || variables.state === 'ventilating' || variables.state === 'open') ?
              'rgb(0, 0, 0)' :
              'rgba(255, 255, 255, 0.3)';
          ]]]
      - color: >
          [[[
            return (variables.state === 'on' || variables.state === 'Thuis' || variables.state === 'Net thuis' || variables.state === 'halfopen' || variables.state === 'ventilating' || variables.state === 'open') ?
              'rgba(0, 0, 0, 0.6)' :
              'rgba(255, 255, 255, 0.3)';
          ]]]
      - background-color: >
          [[[
            return (variables.state === 'on' || variables.state === 'Thuis' || variables.state === 'Net thuis' || variables.state === 'halfopen' || variables.state === 'ventilating' || variables.state === 'open') ?
              'rgba(255, 255, 255, 0.8)' :
              'rgba(115, 115, 115, 0.2)';
          ]]]
  extra_styles: |
    #name, #state {
      font-size: 1.34vw;
      letter-spacing: 0.05vw;
    }
    /* portrait */
    @media screen and (max-width: 1200px) {
      #name, #state {
        font-size: 2vw;
        letter-spacing: 0.05vw;
      }
    }
    /* phone */
    @media screen and (max-width: 800px) {
      #name, #state {
        font-size: 3.1vw;
        letter-spacing: 0.12vw;
      }
    }
    @keyframes card_bounce {
      0% {
        transform: scale(1);
      }
      15% {
        transform: scale(0.9);
      }
      25% {
        transform: scale(1);
      }
      30% {
        transform: scale(0.98);
      }
      100% {
        transform: scale(1);
      }
    }

#################################################
#                                               #
#                    SIDEBAR                    #
#                                               #
#################################################

sidebar_template:
  show_state: false
  show_icon: false
  tap_action:
    action: none
  name: |
    [[[
      if (entity) {
        let attributes = '';
        for (const [key, value] of Object.entries(entity.attributes)) {
          value != false ? attributes += `<p>${value}</p>` : null;
        }
        return attributes;
      }
    ]]]
  extra_styles: |
    #card {
      padding: 0;
    }
    #container {
      display: flex !important;
    }
    #name {
      padding: 1.8vw 2.5vw 0 var(--custom-layout-card-padding);
      white-space: normal;
      text-align: left;
    }
    .time {
      font-size: var(--sidebar-time-font-size);
      font-weight: 200;
      line-height: var(--sidebar-time-line-height);
      letter-spacing: -0.05vw;
      margin-left: -0.3vw;
      color: rgba(255, 255, 255, 0.8);
    }
    .time-colon {
      position: relative;
      top: -.09em;
    }
    p {
      font-family: SF Display;
      font-size: var(--sidebar-font-size);
      line-height: var(--sidebar-line-height);
      font-weight: 300;
      letter-spacing: 0.06vw;
      color: #6a7377;
    }

    p > b {
      color: rgba(255, 255, 255, 0.8);
    }
    /* portrait */
    @media screen and (max-width: 1200px) {
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 1.4 );
        line-height: calc(var(--sidebar-time-line-height) * 1.4 );
      }
      p {
        font-size: calc(var(--sidebar-font-size) * 1.4 );
        line-height: calc(var(--sidebar-line-height) * 1.4 );
      }
    }
    /* phone */
    @media screen and (max-width: 800px) {
      .time {
        font-size: calc(var(--sidebar-time-font-size) * 2.6 );
      }
      p {
        font-size: calc(var(--sidebar-font-size) * 2.6 );
        line-height: calc(var(--sidebar-line-height) * 2.6 );
        letter-spacing: 0.16vw;
      }
      #name {
        padding: 0 0 0 1vw;
      }
    }

#################################################
#                                               #
#                     INFO                      #
#                                               #
#################################################

info:
  variables:
    state: >
      [[[ return entity === undefined || entity.state; ]]]
    uom: >
      [[[ return entity === undefined || entity.attributes.unit_of_measurement; ]]]
    timeout: >
      [[[ return entity === undefined || Date.now() - Date.parse(entity.last_changed); ]]]
  aspect_ratio: 1/1
  show_state: false
  show_icon: false
  state_display: >
    [[[ if (variables.state === true) return 'Okänd'; ]]]
  custom_fields:
    info: >
      [[[ return variables.state ]]]
    uom: >
      [[[ return variables.uom ]]]
  styles:
    grid:
      - grid-template-areas: |
          ".     uom"
          "info  uom"
          "n     n"
      - grid-template-columns: 2fr 1fr
      - grid-template-rows: 1fr 2fr 1fr
      - gap: 2%
      - align-items: start
    name:
      - justify-self: start
      - line-height: 115%
    custom_fields:
      info:
        - justify-self: start
        - line-height: 115%
        - font-weight: 400
      uom:
        - justify-self: start
        - line-height: 115%
        - font-weight: 200
    card:
      - font-family: Sf Display
      - border-radius: var(--custom-button-card-border-radius)
      - -webkit-tap-highlight-color: rgba(0,0,0,0)
      - transition: none
      - padding: 10%
      - --mdc-ripple-color: >
          [[[
            return (variables.state === 'on' || variables.state === 'home' || variables.turn_on === 'on') ?
              'rgb(0, 0, 0)' :
              'rgba(255, 255, 255, 0.3)';
          ]]]
      - color: >
          [[[
            return (variables.state === 'on' || variables.state === 'home' || variables.turn_on === 'on') ?
              'rgba(0, 0, 0, 0.6)' :
              'rgba(255, 255, 255, 0.3)';
          ]]]
      - background-color: >
          [[[
            return (variables.state === 'on' || variables.state === 'home' || variables.turn_on === 'on') ?
              'rgba(255, 255, 255, 0.8)' :
              'rgba(115, 115, 115, 0.2)';
          ]]]
  extra_styles: |
    #name {
      font-size: 1.34vw;
      letter-spacing: 0.05vw;
    }
    #info {
      font-size: 2.7vw;
      letter-spacing: 0.05vw;
    }
    #uom {
      font-size: 1.3vw;
    }
    /* portrait */
    @media screen and (max-width: 1200px) {
      #name, #uom {
        font-size: 2vw;
        letter-spacing: 0.05vw;
      }
      #info {
        font-size: 4vw;
        letter-spacing: 0.05vw;
      }
    }
    /* phone */
    @media screen and (max-width: 800px) {
      #name {
        font-size: 3.1vw;
        letter-spacing: 0.12vw;
      }
      #uom {
        font-size: 2.8vw;
        letter-spacing: 0.12vw;
      }
      #info {
        font-size: 5.5vw;
        letter-spacing: 0.12vw;
      }
    }

info_small:
  template:
    - info
  custom_fields:
    info: >
      [[[ return Math.round(variables.state * Math.pow(10, variables.decimals)) / Math.pow(10, variables.decimals) ]]]

#################################################
#                                               #
#                    CIRCLE                     #
#                                               #
#################################################

circle:
  custom_fields:
    circle: >
      [[[
        if (variables.state === 'on') {
          const input = variables.circle_input;
          const radius = 20.5;
          const circumference = radius * 2 * Math.PI;
          return `
            <svg viewBox="0 0 50 50">
              <style>
                circle {
                  transform: rotate(-90deg);
                  transform-origin: 50% 50%;
                  stroke-dasharray: ${circumference};
                  stroke-dashoffset: ${circumference - input / 100 * circumference};
                }
                tspan {
                  font-size: 10px;
                }
              </style>
              <circle cx="25" cy="25" r="${radius}" stroke="#b2b2b2" stroke-width="1.5" fill="none" />
              <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}<tspan font-size="10">%</tspan></text>
            </svg>
          `;
        }
      ]]]
  styles:
    custom_fields:
      circle: &person
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1

#################################################
#                                               #
#                    LOADER                     #
#                                               #
#################################################

loader:
  custom_fields:
    loader: >
      <img src="/local/loader.svg" width="100%">
  tap_action:
    loader: >
      [[[
        if (entity !== undefined) {
          let elt = this.shadowRoot;
          const loader = (id, style, timeout) => {
            if (elt.getElementById(id)) {
              elt.getElementById(id).style.display = style;
              window.setTimeout(() => {
                elt.getElementById(id).style.display = timeout;
              }, 20000)
            }
          };
          loader('circle', 'none', 'initial');
          loader('loader', 'initial', 'none');
        }
      ]]]
  styles:
    custom_fields:
      loader:
        - display: none
        - top: 3%
        - left: 60%
        - width: 37%
        - position: absolute
        - opacity: 0.5
        - filter: >
            [[[ return variables.state === 'off' ? 'invert(1)' : 'none'; ]]]

#################################################
#                                               #
#                     SHADE                     #
#                                               #
#################################################
shade:
  template:
    - base
  state_display: >
    [[[ 
      if (entity.state == "halfopen") return "Half Open";
      if (entity.state == "halfclosed") return "Half Dicht";
      if (entity.state == "closed") return "Dicht";
      if (entity.state == "ventilating") return "Ventileren";
      if (entity.state == "open") return "Open";
      if (entity.state == "ventilatingnight") return "Ventileren Nacht";
    ]]]
  tap_action:
    action: fire-dom-event
    browser_mod:
      command: popup
      title: >
        [[[ return entity.attributes.friendly_name; ]]]
      card:
        type: entities
        entities: >
          [[[
            return variables.shade_scenes
          ]]]

#################################################
#                                               #
#                     LIGHT                     #
#                                               #
#################################################

light:
  template:
    - base
    - circle
  variables:
    circle_input: >
      [[[ return entity === undefined || Math.round(entity.attributes.brightness / 2.54); ]]]
  hold_action:
    action: fire-dom-event
    browser_mod:
      command: popup
      title: >
        [[[ return entity.attributes.friendly_name; ]]]
      card:
        type: entities
        entities:
          - type: custom:light-popup-card
            entity: >
              [[[ return entity.entity_id ]]]
            icon: none
            fullscreen: false
            brightnessWidth: 130px
            brightnessHeight: 360px
            borderRadius: 1.7em
            sliderColor: "#c7c7c7"
            sliderTrackColor: rgba(25, 25, 25, 0.9)
            displayType: slider
          - type: custom:hui-element
            card_type: horizontal-stack
            style: >
              #root {
                justify-content: center;
                margin-top: 2em;
              }
            cards:
              - type: custom:button-card
                styles:
                  card:
                    - background: "#d8d9e1"
                tap_action:
                  action: call-service
                  service: light.turn_on
                  service_data:
                    entity_id: >
                      [[[ return entity.entity_id ]]]
                    color_temp: 153
                template: color_light
              - type: custom:button-card
                styles:
                  card:
                    - background: "#d5b08d"
                tap_action:
                  action: call-service
                  service: light.turn_on
                  service_data:
                    entity_id: >
                      [[[ return entity.entity_id ]]]
                    color_temp: 326
                template: color_light
          - type: custom:hui-element
            card_type: horizontal-stack
            style: >
              #root {
                justify-content: center;
                margin-bottom: 1em;
              }
            cards:
              - type: custom:button-card
                styles:
                  card:
                    - background: "#ce944b"
                tap_action:
                  action: call-service
                  service: light.turn_on
                  service_data:
                    entity_id: >
                      [[[ return entity.entity_id ]]]
                    color_temp: 500
                template: color_light
          #     - type: custom:button-card
          #       styles:
          #         card:
          #           [
          #             background:
          #               "radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 80%),
          #               conic-gradient(rgb(120, 39, 230), rgb(230, 34, 231), rgb(228, 5, 136), rgb(228, 25, 25),
          #               rgb(229, 105, 30), rgb(232, 226, 46), rgb(125, 230, 41), rgb(52, 232, 40), rgb(51, 231, 92),
          #               rgb(52, 232, 224), rgb(32, 125, 229), rgb(18, 39, 229), rgb(120, 39, 230))",
          #           ]
          #       tap_action:
          #         action: fire-dom-event
          #         browser_mod:
          #           command: popup
          #           title: >
          #             [[[ return entity.attributes.friendly_name ]]]
          #           card:
          #             type: custom:light-entity-card
          #             entity: >
          #               [[[ return entity.entity_id ]]]
          #             brightness: true
          #             color_temp: true
          #             full_width_sliders: false
          #             hide_header: true
          #             show_slider_percent: true
          #             smooth_color_wheel: true
          #             persist_features: true
          #             consolidate_entities: false
          #       template: color_light

#################################################
#                                               #
#                    PERSON                     #
#                                               #
#################################################

person:
  template:
    - base
    - circle
  state_display: >
    [[[ return variables.state; ]]]
  triggers_update: sensor.time
  styles:
    custom_fields:
      icon:
        - clip-path: circle()
        - width: 79%
        - pointer-events: none
        - display: flex
  custom_fields:
    icon: >
      [[[ return entity === undefined || `<img src="${states[entity.entity_id].attributes.entity_picture}" width="100%">`; ]]]
    circle: >
      [[[
        const time = c => {
          const s = (c / 1000);
          const m = (c / (1000 * 60));
          const h = (c / (1000 * 60 * 60));
          const d = (c / (1000 * 60 * 60 * 24));
          if (s < 60) {
            return parseInt(s) + 's';
          } else if (m < 60) {
            return parseInt(m) + 'm';
          } else if (h < 24) {
            return parseInt(h) + 'h';
          } else {
            return parseInt(d) + 'd';
          }
        };
        let last_changed = entity === undefined || time(Date.now() - Date.parse(states[entity.entity_id].last_changed));
        const stroke_color = variables.state === 'home' ? '#b2b2b2' : '#313638';
        const fill_color = variables.state === 'home' ? 'none' : '#FFFFFF08';
        return `
          <svg viewBox="0 0 50 50">
            <style>
              circle {
                transform: none;
                transform-origin: none;
                stroke-dasharray: none;
                stroke-dashoffset: none;
              }
            </style>
            <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${last_changed}</text>
          </svg>
        `;
      ]]]

#################################################
#                                               #
#                  BASE MEDIA                   #
#                                               #
#################################################

base_media:
  tap_action:
    action: >
      [[[
        return !(variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby') ? 'call-service' : 'none';
      ]]]
    service: media_player.media_play_pause
    service_data:
      entity_id: >
        [[[ return entity === undefined || entity.entity_id; ]]]
  double_tap_action:
    action: call-service
    service: >
      [[[ return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ? 'media_player.turn_on' : 'media_player.turn_off'; ]]]
    service_data:
      entity_id: >
        [[[ return entity === undefined || entity.entity_id; ]]]
  styles:
    card:
      - color: >
          [[[
            var entity_picture = entity === undefined || entity.attributes.entity_picture;
            if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
              variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {
              return 'rgba(255, 255, 255, 0.3)';
            }
            return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? 'rgba(0, 0, 0, 0.6)' : '#efefef';
          ]]]
      - text-shadow: >
          [[[
            const entity_picture = entity === undefined || entity.attributes.entity_picture;
            return entity_picture == null ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)';
          ]]]

#################################################
#                                               #
#                     MEDIA                     #
#                                               #
#################################################

media:
  template:
    - base
    - base_media
  styles:
    custom_fields:
      icon:
        - width: 70%
        - fill: "#9da0a2"
        - opacity: >
            [[[
              const entity_picture = entity === undefined || entity.attributes.entity_picture;
              return entity_picture == null ? 1 : 0;
            ]]]
    card:
      - background-color: none
      - background-size: cover
      - background-image: >
          [[[
            const entity_picture = entity === undefined || entity.attributes.entity_picture;
            if (variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
              variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined) {
              return 'linear-gradient(0deg, rgba(115, 115, 115, 0.2) 0%, rgba(115, 115, 115, 0.2) 100%)';
            }
            return (variables.state != 'off' && variables.state != 'idle' && variables.state != 'standby') && (entity_picture == null) ? 
              'linear-gradient(0deg, rgba(255, 255, 255, 0.8) 0%, rgba(255, 255, 255, 0.8) 100%)' : 
              'linear-gradient(0deg, rgba(0,0,0,.8) 0%, rgba(0,0,0,0) 100%), url(' + entity_picture + ')';
          ]]]

#################################################
#                                               #
#               CONDITIONAL MEDIA               #
#                                               #
#################################################

conditional_media:
  template:
    - base
    - base_media
  state_display: >
    [[[
      if (entity.attributes.media_title === 'Nothing playing' || entity.attributes.media_title === 'No title' && variables.state === 'paused') {
        return 'Inget spelas';
      }
      return entity.attributes.media_title === 'No title' && variables.state === 'playing' ? 'Ingen titel' : entity.attributes.media_title;
    ]]]
  custom_fields:
    blur: >
      [[[
        if (entity.attributes.entity_picture !== undefined) return '<div></div>';
      ]]]
    overlay: >
      [[[ 
        if (entity.attributes.entity_picture === undefined && entity.state !== 'idle' && entity.state !== 'unavailable') return '<div></div>';
      ]]]
    media_image: >
      <div></div>
    play_pause: >
      [[[
        const style = `
          <style>
            .scale-up {
              animation: scale-up 0.3s;
              cubic-bezier(.05, .5, .3, 1) 1;
              transform-origin: center center;
            }

            @keyframes scale-up {
              0% {
                opacity: 0;
                transform: scale(0);
              }
              100% {
                opacity: 1;
                transform: scale(1);
              }
            }
          </style>
        `;
        if (variables.state === 'playing') {
          return `
            <svg viewBox="0 0 166 166">${style}
              <path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/>
            </svg>
          `;
        }
        if (variables.state === 'paused') {
          return `
            <svg viewBox="0 0 166 166">${style}
              <path class="scale-up" d="M0 0l166 83L0 166z"/>
            </svg>
          `;
        }
      ]]]
  styles:
    name:
      - z-index: 3
      - margin-bottom: -1%
    state:
      - z-index: 3
    card:
      - padding: 5%
      - border-radius: calc(var(--custom-button-card-border-radius) / 2)
      - backdrop-filter: blur(0) #fix chrome bug
      - -webkit-clip-path: inset(0) #fix safari bug
    custom_fields:
      blur:
        - z-index: 2
        - top: 75.5%
        - left: 0%
        - width: 100%
        - height: 26%
        - position: absolute
        - background-color: rgba(0, 0, 0, 0.2)
        - backdrop-filter: blur(0.4em)
        - -webkit-backdrop-filter: blur(0.4em)
      overlay:
        - z-index: 2
        - opacity: 1
        - top: 75.5%
        - left: 0%
        - width: 100%
        - height: 26%
        - position: absolute
        - background-color: rgba(255, 255, 255, 0.8)
      media_image:
        - z-index: 1
        - top: 0
        - left: 0
        - width: 100%
        - height: 100%
        - position: absolute
        - background-size: cover
        - background-image: >
            [[[ 
              return entity.attributes.entity_picture === undefined ? 'none' : `url(${entity.attributes.entity_picture})`;
            ]]]
      play_pause:
        - z-index: 3
        - top: 0
        - right: 0
        - bottom: 0
        - left: 0
        - margin: auto
        - width: 21%
        - height: 21%
        - position: absolute
        - fill: "#dedede"
        - filter: >
            [[[
              const entity_picture = entity === undefined || entity.attributes.entity_picture;
              return entity_picture == null ? 'none' : 'drop-shadow(0 0 1.3vw rgba(0,0,0,0.7))';
            ]]]
      icon:
        - z-index: 3
        - width: 29%
        - fill: >
            [[[ 
              return variables.state === 'off' || variables.state === 'idle' || variables.state === 'standby' ||
              variables.state === 'unknown' || variables.state === 'unavailable' || entity === undefined ? 
                '#9da0a2' : 
                'rgba(255, 255, 255, 0.8)';
            ]]]
  extra_styles: |
    #name, #state {
      font-size: 1.2vw;
      letter-spacing: 0.05vw;
    }
sonos_media:
  template:
    - conditional_media
  name: >
    [[[
      if (entity.attributes.media_title === 'Nothing playing' || entity.attributes.media_title === 'No title' && variables.state === 'paused') {
        return 'Niks aan het afspelen';
      }
      return entity.attributes.media_artist
    ]]]
  styles:
    name:
      - font-weight: 150

#################################################
#                                               #
#              RECENTLY DOWNLOADED              #
#                                               #
#################################################

recently_downloaded:
  name: "Laatst gedownload:"
  state_display: >
    [[[
      if (entity != undefined) {
        const data = states[entity.entity_id].attributes.data;
        const number = data[1].number == undefined ? '(' + data[1].aired.split('-')[0] + ')' : data[1].number;
        return `${data[1].title} ${number}`;
      }
      return 'Onbekend';
    ]]]
  custom_fields:
    blur: >
      [[[ return entity === undefined || '<div></div>'; ]]]
  styles:
    custom_fields:
      media_image:
        - background-position: center center
        - background-image: >
            [[[ return entity === undefined || `url(${states[entity.entity_id].attributes.data[1].fanart})`; ]]]
      overlay:
        - display: none
    card:
      - color: >
          [[[ return entity === undefined ? 'rgba(255, 255, 255, 0.3)' : '#efefef'; ]]]
      - text-shadow: >
          [[[ return entity === undefined ? 'none' : '1px 1px 5px rgba(18, 22, 23, 0.9)'; ]]]

#################################################
#                                               #
#                 COMPUTER LOCK                 #
#                                               #
#################################################

lock:
  tap_action:
    loader: |
      [[[
        let elt = this.shadowRoot;
        if (states["lock.dator"].state === "locked") {
          elt.getElementById("lock").classList.add("locked");
          window.setTimeout(() => {
            elt.getElementById("lock").classList.remove("locked");
          }, 1100);
        } else {

          // duplicate of "loader" template
          const loader = (id, style, timeout) => {
            if (elt.getElementById(id)) {
              elt.getElementById(id).style.display = style;
              window.setTimeout(() => {
                elt.getElementById(id).style.display = timeout;
              }, 20000);
            }
          };
          loader("circle", "none", "initial");
          loader("loader", "initial", "none");
        }
      ]]]
  custom_fields:
    circle: >
      [[[
        const state = states['script.home_leave'].state === 'on' ? 'locked' : null;
        if (states['lock.dator'].state === 'locked') {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                @keyframes locked {
                  from,
                  to {
                    transform: translateX(0);
                  }
                  10%,
                  30%,
                  50%,
                  70%,
                  90% {
                    transform: translateX(-8%);
                  }
                  20%,
                  40%,
                  60%,
                  80% {
                    transform: translateX(8%);
                  }
                }
                .locked {
                  animation: locked 1.1s;
                }
              </style>
              <path id="lock" class="${state}" d="M8.2 22.6h2.4v-7.2C10.6 7.5 17.1 1 25 1s14.4 6.4 14.4 14.4v7.2h2.4V49H8.2m26.4-26.4v-7.2c0-5.3-4.3-9.6-9.6-9.6s-9.6 4.3-9.6 9.6v7.2"/>
            </svg>
          `;
        }
      ]]]
  styles:
    custom_fields:
      circle:
        - width: 45%
        - fill: var(--state-icon-color)
        - margin: 0 2% 0 0
        - justify-self: end
        - opacity: 1

#################################################
#                                               #
#                    LAUNDRY                    #
#                                               #
#################################################

laundry:
  show_icon: false
  show_name: false
  show_state: true
  tap_action:
    services: >
      [[[
        hass.callService('timer', 'cancel', {
          entity_id: entity.entity_id
        });
        hass.callService('timer', 'start', {
          entity_id: entity.entity_id
        });
      ]]]
  hold_action:
    services: >
      [[[
        hass.callService('timer', 'cancel', {
          entity_id: entity.entity_id
        });
        hass.callService('input_boolean', 'turn_off', {
          entity_id: 'input_boolean.laundry_display'
        });
      ]]]
  styles:
    card:
      - background: "#202a2f30"
      - border-radius: 0.7vw
      - border: "0.2vw solid #292c2e"
    state:
      - font-size: 2.7vw
      - font-family: SF Mono
      - opacity: 0.65
      - padding: 0.55vw 1.2vw 0.5vw 1.2vw
  extra_styles: |
    #card {
      animation: fade 0.8s;
    }
    @keyframes fade {
      0%, 30% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

#################################################
#                                               #
#                 POPUP BUTTONS                 #
#                                               #
#################################################

icon_name:
  size: 1.4em
  color: "#9da0a2"
  styles:
    grid:
      - grid-template-areas: '"i n"'
      - grid-column-gap: 0.3em
    name:
      - font-size: 1.06em
      - letter-spacing: 0.015em
    card:
      - color: "#9da0a2"
      - border-radius: 0.6em
      - padding: 1em 1.4em 1em 1.2em
      - width: 100%
      - font-size: 1.06em
      - font-weight: 500
      - letter-spacing: 0.015em
      - background: "#FFFFFF10"

icon_only:
  color: "#9da0a2"
  styles:
    card:
      - color: "#9da0a2"
      - border-radius: 0.6em
      - width: 4em
      - height: 3.7em
      - background: "#FFFFFF10"

color_light:
  styles:
    card:
      - border-radius: 50%
      - height: 4em
      - width: 4em
      - margin: 4px

#################################################
#                                               #
#                     ICONS                     #
#                                               #
#################################################

icon_plex:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z" fill="#282a2d"/>
        <path d="M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z" fill="#e5a00d"/>
      </svg>

icon_luxaflex:
  custom_fields:
    icon: >
      [[[
        const shade_color = (entity === undefined || ['halfclosed', 'closed', 'ventilatingnight'].includes(entity.state)) ? 'var(--state-icon-color)' : 'var(--state-icon-active-color)';
        return `
          <svg viewBox="0 0 40 40">
            <path d="M3 2h18a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-1v7a1 1 0 0 1-1 1h-6v2.17c1.17.41 2 1.52 2 2.83a3 3 0 0 1-3 3a3 3 0 0 1-3-3c0-1.31.83-2.42 2-2.83V14H5a1 1 0 0 1-1-1V6H3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1m9 16a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1z" fill="${shade_color}" />
          </svg>  
        `;
      ]]]

icon_showerhead:
  custom_fields:
    icon: >
      [[[
        const icon_color = (entity === undefined || entity.state == 'off') ? 'var(--state-icon-color)' : 'var(--state-icon-active-color)';
        return `
          <svg viewBox="0 0 40 40">
            <path d="M20,20A1,1 0 0,1 21,21A1,1 0 0,1 20,22A1,1 0 0,1 19,21A1,1 0 0,1 20,20M16,20A1,1 0 0,1 17,21A1,1 0 0,1 16,22A1,1 0 0,1 15,21A1,1 0 0,1 16,20M12,20A1,1 0 0,1 13,21A1,1 0 0,1 12,22A1,1 0 0,1 11,21A1,1 0 0,1 12,20M8,20A1,1 0 0,1 9,21A1,1 0 0,1 8,22A1,1 0 0,1 7,21A1,1 0 0,1 8,20M4,20A1,1 0 0,1 5,21A1,1 0 0,1 4,22A1,1 0 0,1 3,21A1,1 0 0,1 4,20M6,17A1,1 0 0,1 7,18A1,1 0 0,1 6,19H6A1,1 0 0,1 5,18A1,1 0 0,1 6,17H6M10,17A1,1 0 0,1 11,18A1,1 0 0,1 10,19A1,1 0 0,1 9,18A1,1 0 0,1 10,17M14,17A1,1 0 0,1 15,18A1,1 0 0,1 14,19A1,1 0 0,1 13,18A1,1 0 0,1 14,17M18,17A1,1 0 0,1 19,18A1,1 0 0,1 18,19A1,1 0 0,1 17,18A1,1 0 0,1 18,17M8,14A1,1 0 0,1 9,15A1,1 0 0,1 8,16A1,1 0 0,1 7,15A1,1 0 0,1 8,14M12,14A1,1 0 0,1 13,15A1,1 0 0,1 12,16A1,1 0 0,1 11,15A1,1 0 0,1 12,14M16,14A1,1 0 0,1 17,15A1,1 0 0,1 16,16A1,1 0 0,1 15,15A1,1 0 0,1 16,14M19,12H5V10H19V12M17.92,9H6.08C6.5,6.5 8.5,4.5 11,4.08V2H13V4.08C15.5,4.5 17.5,6.5 17.92,9Z"fill="${icon_color}"  />
          </svg>
        `;
      ]]]

icon_apple_tv:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25.2 49.7l-13.7-.1c-2.4 0-4.6-.8-6.5-2.2-2-1.6-3.6-3.6-4.3-6.2-.2-1-.2-1.9-.3-3V11.5C.5 7.9 1.9 5 4.8 2.7 6.2 1.6 7.8.8 9.6.5c.5-.1.9-.1 1.4-.1L27.5.3l10.9.1c2.6 0 4.8.8 6.7 2.4 2.1 1.7 3.7 3.9 4.2 6.6l.2 2.4.1 20.5-.1 6.7c-.1 2.2-.9 4.2-2.2 5.9-1.7 2.2-4 3.8-6.8 4.4-.6.1-1.2.2-1.9.2-.1.1-13.4.2-13.4.2zm-4-27.8c-.9-1.2-2.2-1.6-3.7-1.2-.4.1-.8.2-1.2.4-.3.1-.6.1-.8 0-.4-.1-.8-.3-1.2-.4-.3-.1-.7-.1-1-.1-1.5.2-2.4 1.1-3 2.6-.4 1.1-.3 2.2 0 3.5.4 1.5 1 2.9 2.1 4 .5.6 1.2.9 2 .6 1.1-.5 2.2-.5 3.4 0 .8.3 1.5 0 2.1-.6.7-.8 1.1-1.8 1.6-2.8v-.2c-1-.6-1.7-1.4-1.8-2.7-.2-1.4.5-2.4 1.5-3.1zm9.9-1.4c.1.2.1.3.1.4l3.6 9.5c.1.3.3.4.6.4h.7c.6 0 .6 0 .9-.6l3.7-9.4c.1-.1.1-.3.2-.5H39l-2.9 8.3-3.1-8.3-1.9.2zM27.3 18l-1.3.4c-.5.2-.5.2-.6.7v1.4h-1.6l.1 1.4h1.5v5c0 .7.1 1.4.2 2.1.1.5.3 1 .8 1.4.8.6 2.6.7 3.5.2l-.1-1.2h-1.3c-.5 0-.9-.3-1-.8-.1-.3-.2-.6-.2-1v-5.8H30c0-.5.1-1 0-1.4h-2.7V18zm-8.8-.9c-1.9.3-3 2-2.7 3.2 1.4.2 2.9-1.7 2.7-3.2z"/>
      </svg>

icon_spotify:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25 .3C11.4.3.3 11.4.3 25S11.4 49.7 25 49.7 49.7 38.6 49.7 25 38.6.3 25 .3zm11.3 35.6c-.4.7-1.4 1-2.1.5-5.8-3.5-13.1-4.3-21.7-2.4-.8.2-1.7-.3-1.8-1.2-.2-.8.3-1.7 1.2-1.8 9.4-2.2 17.5-1.2 24 2.8.6.5.9 1.4.4 2.1zm3.1-6.7c-.6.9-1.7 1.2-2.6.6-6.6-4.1-16.8-5.3-24.6-2.9a1.96 1.96 0 0 1-2.4-1.3 1.96 1.96 0 0 1 1.3-2.4c9-2.7 20.1-1.4 27.7 3.3.8.6 1.1 1.8.6 2.7h0zm.2-7c-8-4.7-21.1-5.2-28.7-2.9-1.2.4-2.5-.3-2.9-1.5s.3-2.5 1.5-2.9c8.7-2.6 23.2-2.1 32.4 3.3 1.1.7 1.5 2.1.8 3.2-.6 1.1-2 1.4-3.1.8h0z"/>
      </svg>

icon_nest_mini:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M49.7 25c0 13.6-11.1 24.7-24.8 24.7C11.3 49.7.3 38.6.3 25S11.4.3 25 .3 49.7 11.4 49.7 25zm-33.9 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3.1 2.3-.9 2.3-2.2h0zm10.8 0c0 1.2.9 2.2 2.2 2.3 1.3 0 2.3-1 2.3-2.2 0-1.3-1-2.3-2.2-2.3-1.3 0-2.3.9-2.3 2.2zm-3.2 0a2.22 2.22 0 0 0-2.2-2.2c-1.2 0-2.3 1-2.3 2.2a2.22 2.22 0 0 0 2.2 2.2c1.3 0 2.3-.9 2.3-2.2h0zm13 2.2a2.22 2.22 0 0 0 2.2-2.2c0-1.2-1-2.3-2.2-2.3a2.22 2.22 0 0 0-2.2 2.2c0 1.3 1 2.3 2.2 2.3z" />
      </svg>

icon_sonos:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25.2,49.6l-13.65-.1a10.81,10.81,0,0,1-6.47-2.19A11.86,11.86,0,0,1,.8,41.13a27.31,27.31,0,0,1-.3-3V11.55A11,11,0,0,1,4.88,2.79,10.63,10.63,0,0,1,9.66.6a6.6,6.6,0,0,1,1.4-.1L27.49.4,38.35.5A10,10,0,0,1,45,2.89,11.11,11.11,0,0,1,49.2,9.46l.2,2.39.1,20.42-.1,6.67a10.42,10.42,0,0,1-2.19,5.88,11.58,11.58,0,0,1-6.77,4.38,11.08,11.08,0,0,1-1.9.2C38.45,49.5,25.2,49.6,25.2,49.6Zm2.23-23.94-5.27-4.94V29h1.57v-4.6L29,29.36V21.05H27.43ZM15.2,20.61A4.31,4.31,0,0,0,10.82,25a4.46,4.46,0,0,0,4.38,4.38,4.38,4.38,0,1,0,0-8.75m0,7.18A2.81,2.81,0,1,1,18,25a2.78,2.78,0,0,1-2.81,2.81M8.13,25a5.45,5.45,0,0,0-1.79-.78c-1.57-.45-1.57-.9-1.57-1.13,0-.44.56-.89,1.34-.89a3,3,0,0,1,1.46.45l.11.11,1.24-.9-.11-.11a3.86,3.86,0,0,0-2.7-1.12A3.45,3.45,0,0,0,4,21.28a2.24,2.24,0,0,0,0,3.59,5.42,5.42,0,0,0,1.8.79c1.57.44,1.57.89,1.57,1.12,0,.45-.56.9-1.35.9a3.24,3.24,0,0,1-1.46-.45l-.11-.12L3.19,28l.12.11A3.84,3.84,0,0,0,6,29.25a3.43,3.43,0,0,0,2.13-.68A2.34,2.34,0,0,0,9,26.78a2.53,2.53,0,0,0-.9-1.8M36,20.61A4.3,4.3,0,0,0,31.59,25,4.38,4.38,0,0,0,36,29.36,4.32,4.32,0,0,0,40.34,25,4.38,4.38,0,0,0,36,20.61m0,7.18A2.81,2.81,0,1,1,38.77,25,2.86,2.86,0,0,1,36,27.79M43,24.87a5.42,5.42,0,0,0,1.8.79c1.57.44,1.57.89,1.57,1.12,0,.45-.56.9-1.35.9a3.24,3.24,0,0,1-1.46-.45h-.11l-1.23.89.11.12a3.85,3.85,0,0,0,2.69,1.12,3.49,3.49,0,0,0,2.13-.67,2.25,2.25,0,0,0,0-3.6,5.36,5.36,0,0,0-1.79-.78c-1.57-.45-1.57-.9-1.57-1.12,0-.45.56-.9,1.34-.9a3.15,3.15,0,0,1,1.46.45l.12.11L48,22l-.11-.11a3.86,3.86,0,0,0-2.7-1.12,3.45,3.45,0,0,0-2.13.67,2.35,2.35,0,0,0-.9,1.8,1.67,1.67,0,0,0,.9,1.68"/>
      </svg>

icon_hue:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -14%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
            <path class="${state}" fill="${variables.light_color}" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
          </svg>
        `;
      ]]]

icon_shade:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -15%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
            <path class="${state}" fill="${variables.light_color}" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/>
          </svg>
        `;
      ]]]

icon_tv:
  styles:
    custom_fields:
      icon:
        - width: 89%
        - margin-top: -7%
        - margin-left: 1%
        - fill: >
            [[[
              return variables.state === 'on' ? '#616161' : '#9da0a2';
            ]]]
  custom_fields:
    icon: >
      [[[
        const style = `
          <style>
            @keyframes on {
              from {
                transform: scaleY(0);
              }
              to {
                transform: scaleY(1);
              }
            }
            .on {
              animation: on 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
            @keyframes off {
              from {
                transform: scaleY(1);
              }
              to {
                transform: scaleY(0);
              }
            }
            .off {
              animation: off 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
          </style>
        `;
        const path = `
          <path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>
        `;
        const gradient = `
          <linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74">
            <stop offset="0" stop-color="#64acb7"/>
            <stop offset="1" stop-color="#7fdbe9"/>
          </linearGradient>
        `;
        if (variables.state === 'on' && variables.timeout < 2000) {
          return `
            <svg viewBox="0 0 50 50"> ${style} ${gradient} 
              <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
              <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
            </svg>
          `;
        }
        if (variables.state === 'on' && variables.timeout > 2000) {
          return `
            <svg viewBox="0 0 50 50"> ${gradient} 
              <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
              <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
            </svg>
          `;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
          return `
            <svg viewBox="0 0 50 50"> ${style} ${gradient} 
              <path class="off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
            </svg>
          `;
        } else {
          return `
            <svg viewBox="0 0 50 50"> ${style} 
              ${path}
            </svg>
          `;
        }
      ]]]

icon_ps5:
  styles:
    custom_fields:
      icon:
        - width: 88%
        - margin-left: -1%
        - margin-top: -7%
  custom_fields:
    icon: >
      [[[
        if (variables.state === 'on' && variables.timeout < 2000) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
              @keyframes on {
                50% {
                  transform: translateY(0);
                }
                100% {
                  transform: translateY(-45%);
                }
              }
              .on {
                animation: on 2s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
              }
            </style>
            <g style="clip-path: url(#mask);">
              <g class="on">
                <path fill="#00aa9e" d="M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z"/>
                <path fill="#f3c202" d="M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z"/>
                <path fill="#326db3" d="M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z"/>
              </g>
            </g>
            <defs>
              <clipPath id="mask">
                <path d="M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z"/>
              </clipPath>
            </defs>
            <path fill="#de0029" d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z"/>
          </svg>
        `;
        }

        return variables.state === 'on' && variables.timeout > 2000 ? `
          <svg viewBox="0 0 50 50">
          <g style="clip-path: url(#mask);">
            <g style="transform: translateY(-45%);">
              <path fill="#00aa9e" d="M49.2 38.9l-75.6-25.1v7.4l75.6 25.2z"/>
              <path fill="#f3c202" d="M49.2 46.4l-75.6-25.2v7.5l75.6 25.1z"/>
              <path fill="#326db3" d="M49.2 53.8l-75.6-25.1V51l75.6 25.1zm0-22.3L-26.4 6.4v7.4l75.6 25.1z"/>
            </g>
          </g>
          <defs>
            <clipPath id="mask">
              <path d="M47.5 33.2c-.5-2.2-3.9-3.5-9.1-3.9-3.8-.3-7.5.6-11.1 1.9l-.6.2v-5.7l-5.7.8-4.6 1.6L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 3.3.6 6.2.2 8.9-.7l7.3 4.8L33 41l10.7-4h.1c2.8-1 4-2.5 3.7-3.8zm-31.3 2l-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 7.2-2.7v2.8l-3.2 1.1zm22.5-1.1l-1.9.7-10.2 3.7V36l6.5-2.4 3.8-1.3c4-.9 5.6.5 1.8 1.8z"/>
            </clipPath>
          </defs>
          <path fill="#de0029" d="M26.7 14.6v28.7l-7.3-2.5V7.1l9.3 2.6c6 1.7 9.6 5 9.6 10.7-.1 6.7-3 9.4-8.7 7.6V14.9c-.1-1.6-2.9-1.7-2.9-.3h0z"/>
        </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <path fill="#9da0a2" d="M43.8 37h-.1l-10.6 4-4.2 1.6v-4.9l8-2.9 1.9-.7c3.8-1.3 2.2-2.7-1.8-1.9l-3.8 1.3-4.3 1.6v-4.5c3.1-1 6.3-1.6 9.5-1.4 5.3.4 8.7 1.6 9.1 3.9.3 1.4-.9 2.9-3.7 3.9zm-26.7-2.1l-.9.3-3.6 1.3c-2.2.8-4.1-1.1-2.1-1.9l1.7-.6 5-1.9v-4.2l-.6.2L6 31.9h-.1c-1.9.7-3.8 2.2-3.7 4.2.1 2.1 4.7 2.6 8.2 3.2 2.4.4 4.6.3 6.7-.1v-4.3zm12.4-20V28c5.7 1.7 8.7-.9 8.7-7.6.1-5.7-3.6-9-9.6-10.7l-9.3-2.6v33.8l7.2 2.5.1.1V14.6c.1-1.4 2.9-1.3 2.9.3z"/>
          </svg>
        `;
      ]]]

icon_spot:
  styles:
    custom_fields:
      icon:
        - width: 70%
        - margin-left: -8%
        - margin-top: 3%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state === 'on' && variables.timeout < 2000) {
          state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
          state = 'off';
        }
        if (variables.state === 'on' && variables.timeout > 2000) {
          state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-11deg);
                }
                100% {
                  transform: rotateZ(-15deg);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-4deg);
                }
                100% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
                animation-delay: -0.1s;
              }
              .off {
                animation: off 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
              }
              .on_timeout {
                transform: rotateZ(-15deg);
                transform-origin: 40% 20%;
              }
            </style>
            <path style="clip-path: url(#mask);" fill="#9da0a2" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/>
            <defs>
              <clipPath id="mask">
                <path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/>
              </clipPath>
            </defs>
            <path class="${state}" fill="${variables.light_color}" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/>
          </svg>
        `;
      ]]]

icon_imac:
  styles:
    custom_fields:
      icon:
        - width: 82%
        - margin-left: 1%
        - margin-top: -6%
        - fill: >
            [[[ return variables.state === 'on' ? '#72757c' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from {
                  opacity: 0.5;
                  transform: scale(0.6);
                }
                100% {
                  opacity: 1;
                }
              }
              .on {
                animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z"/>
          </svg>
        `;
      ]]]

icon_monitors:
  styles:
    custom_fields:
      icon:
        - width: 73%
        - margin-left: -9%
  custom_fields:
    icon: >
      [[[
        const style = `
        <style>
          @keyframes cone {
            35% {
              transform: scale(0.8);
              animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
            }
            36% {
              transform: translateY(0%);
            }
            49% {
              transform: scale(1.25);
            }
            63% {
              transform: scale(0.85);
              animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
            }
            77% {
              transform: scale(1.15);
              animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
            }
            95% {
              transform: scale(1);
            }
          }
          .cone {
            animation: cone 1.2s;
            transform-origin: center;
          }
          @keyframes speaker {
            0% {
              transform: scale(1);
            }
            40% {
              transform: scale(1);
            }
            49% {
              transform: scale(0.95);
            }
            63% {
              transform: scale(1);
            }
            77% {
              transform: scale(0.95);
            }
            100% {
              transform: scale(1);
            }
          }
          .speaker {
            animation: speaker 1.3s;
            transform-origin: center;
          }
        </style>
        `;
        const paths = `
        <g class="speaker">
          <path fill="#686868" d="M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z"/>
          <path fill="#2a2a2a" d="M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z"/>
        </g>
        <path class="cone" fill="#e5dd00" d="M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z"/>
        `;
        if (variables.state === 'on' && variables.timeout < 2000) {
        return `
          <svg viewBox="0 0 50 50">
            ${style}
            ${paths}
          </svg>
        `;
        }

        return variables.state === 'on' && variables.timeout > 2000 ? `
          <svg viewBox="0 0 50 50">
            ${paths}
          </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <path fill="#9da0a2" d="M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z"/>
          </svg>
        `;
      ]]]

icon_lamp:
  styles:
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        const state = (variables.state === 'on' && variables.timeout < 2000) ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
            <path class="${state}" fill="${variables.light_color}" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/>
          </svg>
        `;
      ]]]

icon_air_purifier:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
        - fill: >
            [[[ return variables.state === 'on' ? '#5daeea' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z"/>
      </svg>

icon_fan:
  styles:
    custom_fields:
      icon:
        - width: 75%
        - margin-left: -3%
  custom_fields:
    icon: >
      [[[
        const style = `
        <svg viewBox="0 0 50 50">
          <style>
            @keyframes rotate {
              0% {
                visibility: visible;
                transform: rotate(0deg) translateZ(0);
              }
              100% {
                transform: rotate(1080deg) translateZ(0);
              }
            }
            .start {
              animation: rotate 2.8s ease-in;
              transform-origin: center;
              fill: #5daeea;
              visibility: hidden;
            }
            .on_delay {
              animation: rotate 1.8s linear infinite;
              transform-origin: center;
              fill: #5daeea;
              animation-delay: 2.8s;
              visibility: hidden;
              will-change: transform;
            }
            .on_no_delay {
              animation: rotate 1.8s linear infinite;
              transform-origin: center;
              fill: #5daeea;
              will-change: transform;
            }
            .on {
              animation: rotate 1.8s linear forwards;
              transform-origin: center;
              fill: #5daeea;
              visibility: hidden;
              will-change: transform;
            }
            .end {
              animation: rotate 2.8s;
              transform-origin: center;
              fill: #9ca2a5;
              animation-timing-function: cubic-bezier(.61, 1, .88, 1);
            }
          </style>
        `;
        const path = `
        <circle cx="25" cy="25" r="6.6"/>
        <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
        `;
        if (variables.state === 'off' && variables.timeout < 2000) {
        return `${style}<g class="end">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout > 2000) {
        return `<svg viewBox="0 0 50 50" fill="#9ca2a5"><g>${path}</g></svg>`;
        }
        if (variables.state === 'on' && variables.timeout > 2000) {
        return `${style}<g class="on_no_delay">${path}</g></svg>`;
        }
        if (variables.state === 'on' && variables.timeout < 2000) {
        return `${style}<g class="start">${path}</g><g class="on_delay">${path}</g></svg>`;
        }

      ]]]

icon_bathroom:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state === 'on' && variables.timeout < 2000) {
          state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
          state = 'off';
        }
        if (variables.state === 'on' && variables.timeout > 2000) {
          state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50" fill="${variables.light_color}">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg) translate(0%, 0%);
                }
                100% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
                45% {
                  transform: rotateZ(-40deg);
                }
                55% {
                  transform: rotateZ(0deg);
                }
                65% {
                  transform: rotateZ(-15deg);
                }
                75% {
                  transform: rotateZ(0deg);
                }
                85% {
                  transform: rotateZ(-5deg);
                }
                95% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.45s;
                animation-fill-mode: forwards;
                transform-origin: 45% 41%;
                transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);
              }
              .on_timeout {
                transform: rotateZ(-90deg) translate(-1.5%, 0%);
                transform-origin: 45% 41%;
              }
              .off {
                animation: off 1.1s linear;
                animation-delay: 0.05s;
                animation-fill-mode: both;
                transform-origin: 45% 41%;
              }
            </style>
            <path d="M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z"/>
            <path class="${state}" d="M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z"/>
          </svg>
        `;
      ]]]

icon_fan2:
  styles:
    custom_fields:
      icon:
        - width: 75%
        - margin-left: -3%
  custom_fields:
    icon: >
      [[[
        const path = `
          <circle cx="25" cy="25" r="6.6"/>
          <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
        `;
        const style = `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes rotate {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              .start {
                animation: rotate 2.8s ease-in;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .on {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                animation-delay: 2.8s;
                visibility: hidden;
                will-change: transform;
              }
              .end {
                animation: rotate 2.8s;
                transform-origin: center;
                fill: #9ca2a5;
                animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                will-change: transform;
              }
              .start_timeout {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .end_timeout {
                fill: #9ca2a5;
              }
            </style>
        `;
        if (variables.state === 'on' && variables.timeout < 2000) {
          return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
          return `${style}<g class="end">${path}</g></svg>`;
        }
        if (variables.state === 'on' && variables.timeout > 2000) {
          return `${style}<g class="start_timeout">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout > 2000) {
          return `${style}<g class="end_timeout">${path}</g></svg>`;
        }
      ]]]

icon_closet:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: -15%
  custom_fields:
    icon: >
      [[[
        const room = 'd="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"';
        const door = 'd="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"';

        if (variables.state === 'on' && variables.timeout < 2000) {
          return `
            <style>
              .state {
                animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: #9da0a2;
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity" ${room}/>
              <path class="state" ${door}/>
            </svg>
          `;
        }

        if (variables.state === 'on' && variables.timeout > 2000) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_on {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              </style>
              <path ${room}/>
              <path class="state_timeout_on" ${door}/>
            </svg>
          `;
        }

        return variables.state === 'off' && variables.timeout < 2000 ? `
          <style>
            .state {
              animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .opacity {
              animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .reverse {
              animation-direction: reverse;
            }
            @keyframes state {
              0% {
                transform: none;
                fill: #9da0a2;
              }
              100% {
                transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                fill: #b68349;
              }
            }
            @keyframes opacity {
              0% {
                opacity: 0;
              }
              100% {
                opacity: 1;
              }
            }
          </style>
          <svg viewBox="0 0 50 50">
            <path class="opacity reverse" ${room}/>
            <path class="state reverse" ${door}/>
          </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <style>
              .state_timeout_off {
                fill: var(--state-icon-color);
              }
            </style>
            <path class="state_timeout_off" ${door}/>
          </svg>
        `;
      ]]]

icon_away:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 79%
        - fill: >
            [[[ return variables.state === 'on' ? '#516d82' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        const state = variables.state === 'on' ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                10%,
                20%,
                100% {
                  transform: rotateZ(0deg);
                }
                30%,
                50%,
                70% {
                  transform: rotateZ(7deg);
                }
                90% {
                  transform: rotateZ(3deg);
                }
                40%,
                60%,
                80% {
                  transform: rotateZ(-7deg);
                }
              }
              .on {
                animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);
                animation-fill-mode: both;
                transform-origin: 70% 80%;
                animation-delay: 0s;
              }
            </style>
            <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/>
          </svg>
        `;
      ]]]

icon_home:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 70%
        - fill: >
            [[[ return variables.state === 'on' ? '#c7983e' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        const state = variables.state === 'on' ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from,
                20%,
                40%,
                60%,
                80%,
                to {
                  animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                }
                0% {
                  transform: scale(0.3);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.9);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                to {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 1s;
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/>
          </svg>
        `;
      ]]]
