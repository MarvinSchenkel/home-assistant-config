---
alias: send_notification
description: >
  Automatically send a notification to one or more
  devices, based on our presence and states of other devices.
mode: parallel
max: 100

fields:
  message:
    description: The message that needs to be sent to the receivers
  title:
    description: Title of the message
  emoji:
    description: The emoji to be used for the mobile notification
  receivers:
    description: List of people that need to receive the notification
  type:
    description: Type of the notification, default 'normal'
  image:
    description: (Optional) Image URL to show in the notification
  video:
    description: (Optional) Video URL to show in the notification

variables:
  type: "{{ type | default('normal') }}"
  image: "{{ image | default('None') }}"
  video: "{{ video | default('None') }}"
  home_status: ["Thuis", "Net Thuis"]
  away_status: ["Weg", "Net weg", "Lang weg"]
  laura_state: "{{ states('input_select.laura_status_dropdown') }}"
  marvin_state: "{{ states('input_select.marvin_status_dropdown') }}"

sequence:
  - repeat:
      count: "{{ receivers | length }}"
      sequence:
        - variables:
            receiver: "{{ receivers[repeat.index-1] }}"
            name: "{{ receiver[0] | upper }}{{ receiver[1:] }}"
            title: "{{ title | default('Hey') }} {{ name }}!"

        # Check if we need to notify the mancave TV
        - choose:
            - conditions:
                - condition: state
                  entity_id:
                    - media_player.mancave_tv
                  state: "on"
                - "{{ receiver == 'marvin' }}"
                - "{{ marvin_state in home_status }}"
              sequence:
                - service: notify.mancave_tv
                  continue_on_error: true
                  data:
                    message: "{{ emoji | default('') }} {{ message }}"
                    title: "{{ title }}"
                    data:
                      image: "{{ image }}"
                      video: "{{ video }}"

        # Send notification to the intercom via TTS and MA
        # Check woonkamer wakkker
        - choose:
            - conditions:
                - "{{ receiver == 'intercom' }}"
              sequence:
                - if:
                    - condition: state
                      entity_id: input_select.livingroom_room_mode
                      state: "Wakker"
                    - not:
                        - condition: state
                          entity_id: media_player.living_room_android
                          state: "on"
                  then:
                    - action: conversation.process
                      data:
                        agent_id: conversation.chatgpt
                        text: >-
                          Herschrijf de content van de volgende smart home notificatie en geef er
                           je eigen draai aan. Antwoord alleen met de content tussen " ":
                          {{ message }}
                      response_variable: response
                    - action: tts.speak
                      target:
                        entity_id: tts.openai_gpt_4o_mini_tts
                      data:
                        cache: true
                        language: nl
                        message: "{{ response.response.speech.plain.speech.lower() }}"
                        media_player_entity_id: '{{ states("sensor.mass_media_entity") }}'

        # Send mobile notifications
        - choose:
            - conditions: "{{ receiver == 'marvin'
                and (type == 'normal' or
                (type == 'away_only' and marvin_state in away_status) or
                (type == 'home_only' and marvin_state in home_status)
                ) }}"
              sequence:
                - service: notify.mobile_app_marvins_iphone_13_nieuw
                  data:
                    message: "{{ emoji | default('') }} {{ message }}"
                    title: "{{ title }}"
                    data:
                      image: "{{ image }}"
                      video: "{{ video }}"
        - choose:
            - conditions: "{{ receiver == 'laura'
                and (type == 'normal' or
                (type == 'away_only' and laura_state in away_status) or
                (type == 'home_only' and laura_state in home_status)
                ) }}"
              sequence:
                - service: notify.mobile_app_iphone_van_l_a
                  data:
                    message: "{{ emoji | default('') }} {{ message }}"
                    title: "{{ title }}"
                    data:
                      image: "{{ image }}"
                      video: "{{ video }}"
